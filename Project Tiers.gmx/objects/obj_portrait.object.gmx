<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>character = "";
rank = -3.14159;
rankChange = 0;
owner = -1;
xOffsetOwner = 0;
yOffsetOwner = 0;
mouseOnPortrait = false;
mouseOnArrow = false;
xDest = 0;
yDest = 0;
xOwnerOffset = 0;
yOwnerOffset = 0;
mouseHold = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>mouseOnPortrait = position_meeting(mouse_x, mouse_y, id);
if (!mouseOnPortrait || keyboard_check(vk_tab))
    mouseOnArrow = (position_meeting(mouse_x - sprite_width, mouse_y, id) &amp;&amp; rankChange != -3.14159) || keyboard_check(vk_tab);
else mouseOnArrow = false;
        
/*if (mouse_check_button_pressed(mb_left))
    if (position_meeting(mouse_x, mouse_y, id))
        mouseHold = true;*/
if (mouse_check_button_released(mb_left))
    mouseHold = false;

if (mouseHold)
{
    xDest = mouse_x;
    yDest = mouse_y;
}
else
{
    xDest = owner.x + xOwnerOffset;
    yDest = owner.y + yOwnerOffset;
}

x = lerp(x, xDest, .1 + (.9 * mouseHold));
y = lerp(y, yDest, .1 + (.9 * mouseHold));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(sprite_index, image_index, x,  y);

//draw arrow
var angle = 0;
var color = c_lime;
if (rankChange &lt; 0)
{
    angle = 180;
    color = c_red;
}
else if (rankChange == 0)
{
    angle = 270;
    color = c_white;
}

if (rankChange != -3.14159)
    draw_sprite_ext(obj_menu.projectArrowSprite, 0, x + sprite_width, y, 1, 1, angle, color, 1);

draw_set_color(mainTextColor);
draw_set_halign(fa_center);
draw_set_valign(fa_middle);
draw_set_font(font_default);

//draw text from mouse hover
if (mouseOnPortrait)
    draw_text(x, y, string_copy(character, 2, string_length(character) - 2) + " " + string(rank));
if (mouseOnArrow)
{
    draw_set_color(arrowTextColor);
    draw_text(x + sprite_width, y, abs(rankChange));
    draw_set_color(mainTextColor);
}

if (obj_menu.debug)
    draw_text(x + sprite_width, y, id);
    
draw_set_color(c_black);
draw_set_halign(fa_left);
draw_set_valign(fa_top);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
